definitions:
  model.Movie:
    properties:
      budget:
        type: integer
      id:
        type: integer
      imdb_id:
        type: string
      name:
        type: string
      original_language:
        type: string
      overview:
        type: string
      poster_path:
        type: string
      release:
        type: string
      revenue:
        type: integer
      runtime:
        type: integer
      vote_average:
        type: number
      watched_date:
        type: string
    type: object
  model.Watched:
    properties:
      date:
        type: string
      id:
        type: integer
    type: object
  tmdb.MovieResult:
    properties:
      adult:
        type: boolean
      backdrop_path:
        type: string
      genre_ids:
        items:
          type: integer
        type: array
      id:
        type: integer
      original_language:
        type: string
      original_title:
        type: string
      overview:
        type: string
      popularity:
        type: number
      poster_path:
        type: string
      release_date:
        type: string
      title:
        type: string
      video:
        type: boolean
      vote_average:
        type: number
      vote_count:
        type: integer
    type: object
info:
  contact: {}
paths:
  /api/search/movie:
    get:
      description: Search for movies using The Movie Database (TMDB) API. Provide
        search terms via query parameter to find matching movies.
      parameters:
      - description: Search query for movie titles
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: TMDB search results containing matching movies
          schema:
            $ref: '#/definitions/tmdb.MovieResult'
        "400":
          description: Missing or empty query parameter
          schema:
            type: string
        "500":
          description: TMDB API error or server error
          schema:
            type: string
      summary: Search movies via TMDB
      tags:
      - Movies
  /api/watched:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: List of all watched movies (array may be empty)
          schema:
            items:
              $ref: '#/definitions/model.Movie'
            type: array
        "500":
          description: Server error while fetching watched movies
          schema:
            type: string
      summary: Get all watched movies
      tags:
      - Movies
    post:
      consumes:
      - application/json
      description: Mark a movie as watched by providing a TMDB ID. If the movie doesn't
        exist in the database, it will be fetched from TMDB and created. If no date
        is provided, the current date is used.
      parameters:
      - description: Watched movie data (must include `id` as TMDB ID; optional `date`
          in YYYY-MM-DD format)
        in: body
        name: watched
        required: true
        schema:
          $ref: '#/definitions/model.Watched'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully marked movie as watched
          schema:
            $ref: '#/definitions/model.Watched'
        "400":
          description: Invalid request body or missing required `id` field
          schema:
            type: string
        "500":
          description: Internal server error, database error, or TMDB API error
          schema:
            type: string
      summary: Mark a movie as watched
      tags:
      - Movies
  /api/watched/export:
    get:
      description: Export all watched movies grouped by their watched date. Returns
        a map where keys are dates and values are arrays of TMDB movie IDs watched
        on that date.
      produces:
      - application/json
      responses:
        "200":
          description: Map of watched dates to arrays of TMDB movie IDs (dates as
            keys, movie ID arrays as values)
          schema:
            additionalProperties:
              items:
                type: integer
              type: array
            type: object
        "500":
          description: Server error while fetching watched movies
          schema:
            type: string
      summary: Export watched movies grouped by date
      tags:
      - Movies
swagger: "2.0"
