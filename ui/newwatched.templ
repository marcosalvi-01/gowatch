package ui

import (
	"fmt"
	"gowatch/model"
	"time"
)

templ AddWatched() {
	<div class="bg-slate-700 p-4 sm:p-6 rounded-xl shadow-lg mt-3 mx-2 sm:mx-0" id="add-watched-container">
		<div class="flex flex-col sm:flex-row sm:justify-between sm:items-center mb-5 gap-2">
			<h2 class={ sectionTitleClass() + " text-center sm:text-left" }>Add watched movie</h2>
		</div>
		<form
			hx-post="/ui/search"
			hx-target="#search-results"
			hx-indicator="#loading"
			hx-swap="innerHTML show:#add-watched-container:bottom"
		>
			<div class="flex flex-col sm:flex-row gap-4">
				<div class="flex flex-col flex-1">
					<label for="query" class="block font-medium text-white mb-2">Search:</label>
					<div class="flex flex-col sm:flex-row gap-2">
						<input
							id="query"
							type="text"
							name="query"
							placeholder="Search movies..."
							class={ formInputClass() + " flex-1" }
						/>
						<button type="submit" class={ btnClass() + " w-full sm:w-auto" }>Search</button>
					</div>
				</div>
			</div>
			<div id="loading" class="htmx-indicator hidden text-white italic text-center mt-2">Loading...</div>
		</form>
		<form
			id="add-watched-form"
			hx-post="/ui/add-watched"
			hx-target="#toast-container"
			hx-indicator="#add-loading"
			hx-swap="innerHTML show:window:top"
		>
			<div id="search-results"></div>
			<div id="add-loading" class="htmx-indicator hidden text-white italic text-center mt-2">Adding movie...</div>
		</form>
	</div>
}

templ SearchMovieList(movies []model.Movie) {
	<div id="search-movie-list-container">
		<div class="flex flex-row gap-3 sm:gap-4 overflow-x-auto py-4 px-2 sm:px-4 -mx-2 sm:-mx-4">
			for _, movie := range movies {
				<div class="w-32 sm:w-40 md:w-48 flex-shrink-0">
					@MovieCard(movie.Title, movie.PosterPath, MovieCardInput(movie.ID)) {
						<div class="pb-1 sm:pb-2">
							if movie.ReleaseDate.IsZero() {
								<div class="text-xs text-white">üìÖ Unknown</div>
							} else {
								<div class="text-xs text-white">üìÖ { movie.ReleaseDate.Format("2006") }</div>
							}
						</div>
						<div class="flex flex-col sm:flex-row sm:justify-between sm:items-start pb-1 sm:pb-2 gap-1">
							<div class="font-bold text-xs sm:text-sm leading-tight text-white pr-1" title={ movie.Title }>{ movie.Title }</div>
							if movie.VoteAverage > 0 {
								<div class="text-xs sm:text-sm text-white flex-shrink-0">{ fmt.Sprintf("%.1f", movie.VoteAverage) } ‚≠ê</div>
							}
						</div>
						<div>
							if movie.Overview != "" {
								<div class="text-xs text-white line-clamp-3 sm:line-clamp-4">{ movie.Overview }</div>
							}
						</div>
					}
				</div>
			}
		</div>
		<div id="add-watched-date-input"></div>
	</div>
}

templ MovieCardInput(movieID int64) {
	<input
		type="radio"
		name="selected_movie"
		value={ movieID }
		class="hidden peer"
		form="add-watched-form"
		hx-get="/ui/add-watched-date-input"
		hx-target="#add-watched-date-input"
		hx-indicator="#loading"
		hx-swap="innerHTML show:#add-watched-container:bottom"
	/>
}

templ AddWatchedDateAndSubmit() {
	<div class="flex flex-col p-2 sm:p-0" id="watched-date-input">
		<label for="date" class="block font-medium text-white mb-2">When did you watch it? (YYYY-MM-DD)</label>
		<input
			type="text"
			class={ formInputClass() + " invalid:border-red-500 invalid:ring-red-500 focus:invalid:border-red-500 focus:invalid:ring-red-500 peer mb-2" }
			required
			name="date_watched"
			form="add-watched-form"
			value={ time.Now().Format("2006-01-02") }
			pattern="[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])"
			placeholder="2006-01-02"
			title="Please enter a date in YYYY-MM-DD format"
		/>
		<p class="text-red-500 text-sm mb-3 hidden peer-invalid:block">
			Please enter a valid date in YYYY-MM-DD format
		</p>
		<button type="submit" form="add-watched-form" class={ btnClass() + " w-full sm:w-auto" }>Add</button>
	</div>
}
