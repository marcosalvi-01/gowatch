package ui

templ WatchedList(app *App) {
	{{ watched, err := app.getWatchedMovies() }}
	<div>
		if err != nil {
			<div class="bg-red-50 border border-red-200 text-red-800 p-4 rounded-lg mb-5">
				<strong>Error:</strong> { err.Error() }
			</div>
		} else if len(watched) == 0 {
			<div class="text-center py-15 px-5 text-gray-500">
				<div class="text-5xl mb-4">ðŸŽ¬</div>
				<h3 class="text-white text-lg font-medium text-center">No watched movies yet</h3>
				<p class="text-white text-lg font-medium text-center">Start by adding movies to see them here!</p>
			</div>
		} else {
			<div class="grid grid-cols-[repeat(auto-fill,minmax(13rem,1fr))] gap-5">
				for _, w := range watched {
					<div
						class="p-1 bg-white rounded-xl shadow-lg overflow-hidden transition-all duration-200 hover:-translate-y-1 hover:shadow-xl w-56"
						title={ w.Title }
					>
						if w.PosterPath != "" {
							<img
								src={ "https://image.tmdb.org/t/p/w500" + w.PosterPath }
								alt={ w.Title + " poster" }
								class="w-full h-72 object-cover rounded-xl"
								loading="lazy"
							/>
						} else {
							<div class="w-full h-72 bg-gradient-to-br rounded-xl from-indigo-500 to-purple-600 flex items-center justify-center text-white text-lg font-medium text-center p-5">
								{ w.Title }
							</div>
						}
						<div class="p-2">
							<div class="text-sm overflow-hidden text-ellipsis whitespace-nowrap font-semibold text-gray-800 mb-2">{ w.Title }</div>
							<div class="text-gray-500 text-sm flex items-center gap-1.5">
								<span>ðŸ“… { w.WatchedDate.Format("2006-01-02") }</span>
							</div>
						</div>
					</div>
				}
			</div>
		}
	</div>
}
